const router = require("express").Router();
const { subscriptionController } = require('../controllers/subscriptions/subscription');
const { buysubscriptionlistController } = require('../controllers/subscriptions/buysubscriptionlist');
const { buysubscriptionController } = require('../controllers/subscriptions/buysubscription');
const { availedSubscriptionController } = require('../controllers/subscriptions/availedSubscription');
const { subscriptionSubmitController } = require('../controllers/subscriptions/subscriptionSubmit');
const { subscriptionListController } = require('../controllers/subscriptions/subscriptionList');
const { subscriptionStatusController } = require('../controllers/subscriptions/subscriptionStatus');
const { createorderController } = require("../controllers/subscriptions/createorder");
const { verifypaymentController } = require("../controllers/subscriptions/verifypayment");
const { initiatepaymentController } = require("../controllers/subscriptions/initiatepayment");
const { redirectUrlController } = require("../controllers/subscriptions/redirectUrl");
const { setSubscriptionActiveStatusController } = require("../controllers/subscriptions/setSubscriptionActiveStatus");
const authenticateToken = require('../middlewares/authenticateTokenUser');
module.exports = router;
router.post("/subscriptionsList", subscriptionController);
router.post("/buysubscriptionlist", buysubscriptionlistController);
router.post("/buysubscription", authenticateToken, buysubscriptionController);
router.post("/availedSubscription", availedSubscriptionController);
router.post("/subscriptionSubmit", subscriptionSubmitController);
router.post("/submitSubscriptionList", subscriptionListController);
router.post("/changeSubscriptionStatus", subscriptionStatusController);
router.post("/createorder", createorderController);
router.post("/verifypayment", verifypaymentController);
router.post("/initiatepayment", authenticateToken, initiatepaymentController);
router.get("/redirect-url/:merchantTransactionId", redirectUrlController);
router.get("/setSubscriptionActiveStatus", setSubscriptionActiveStatusController);